//
// Generated by dtk
// Translation Unit: d_a_obj_hami4.cpp
//

#include "d/actor/d_a_obj_hami4.h"
#include "JSystem/J3DGraphAnimator/J3DModel.h"
#include "d/d_com_inf_game.h"
#include "d/d_procname.h"
#include "d/d_priority.h"

/* 00000078-00000098       .text CheckCreateHeap__FP10fopAc_ac_c */
static BOOL CheckCreateHeap(fopAc_ac_c* actor) {
    ((daObjHami4_c*)actor)->CreateHeap();
    /* Nonmatching */
}

/* 00000098-00000374       .text CreateHeap__12daObjHami4_cFv */
void daObjHami4_c::CreateHeap() {
    // getObjectRes()
    int modelData;
    JUT_ASSERT(0x5f, modelData != 0);
    // JUTAssertion::showAssert(JUTAssertion::getSDevice(),"d_a_obj_hami4.cpp",0x5f,"modelData != 0");
    /* Nonmatching */
}

/* 00000374-00000420       .text CreateInit__12daObjHami4_cFv */
void daObjHami4_c::CreateInit() {
    
    this->cullMtx = mpModels[0]->getBaseTRMtx();
    for (int i = 0; i < 4; i++){
        dComIfG_Bgsp()->Regist(mdBgW[i],this);
    }
    fopAcM_setCullSizeBox
                (this, -10000.0,-100.0,-10000.0,10000.0,100.0,10000.0);
    this->cullSizeFar = 1.0;
    set_mtx();
    return;
    /* Nonmatching */
}

/* 00000420-000005B8       .text set_mtx__12daObjHami4_cFv */
void daObjHami4_c::set_mtx() {
    short sVar3;
    sVar3 = 0;
    for (int i = 0; i < 4; i++){
        mpModels[i]->setBaseScale(scale);
        mDoMtx_stack_c::transS(current.pos);
        mDoMtx_stack_c::YrotM(current.angle.y + sVar3);
        mDoMtx_stack_c::transM(-field_0x37C * JMASSin(0x2000), 0.0, -field_0x37C * JMASCos(0x2000));
        mDoMtx_stack_c::copy(mpModels[i]->getBaseTRMtx());
        mDoMtx_stack_c::copy(field_0x2B8[i]);
        mdBgW[i]->Move();
        sVar3 = sVar3 + 0x4000;
    }
    return;
    /* Nonmatching */
}

/* 000005B8-00000634       .text daObjHami4_close_stop__12daObjHami4_cFv */
void daObjHami4_c::daObjHami4_close_stop() {
    int switchIndex;
    
    switchIndex = prm_get_swSave();
    if (fopAcM_isSwitch(this, switchIndex)) {
        fopAcM_orderOtherEvent2(this,"AMI4_OPEN",dEvtFlag_NOPARTNER_e);
        field_0x378 = 1;
    }
    /* Nonmatching */
}

/* 00000634-00000714       .text daObjHami4_open_demo_wait__12daObjHami4_cFv */
void daObjHami4_c::daObjHami4_open_demo_wait() {
    if (eventInfo.checkCommandDemoAccrpt()) {
        field_0x378 = 2;
        mDoAud_seStart(0x806);
        fopAcM_seStartCurrent(this, JA_SE_OBJ_SLIDE_AMI_OPEN, 0);
    } else {
        fopAcM_orderOtherEvent2(this,"AMI4_OPEN",dEvtFlag_NOPARTNER_e);
    }
    /* Nonmatching */
}

/* 00000714-000007AC       .text daObjHami4_open_demo__12daObjHami4_cFv */
void daObjHami4_c::daObjHami4_open_demo() {
  
    field_0x37C += 10;
    if (field_0x37C >= 1500) {
        field_0x37C = 1500;
        field_0x378 = 3;
        dComIfGp_getVibration().StartShock(4,-0x21,cXyz(0.0f, 1.0f, 0.0f));
        dComIfGp_event_reset();
    }
    /* Nonmatching */
}

/* 000007AC-000007B0       .text daObjHami4_open_stop__12daObjHami4_cFv */
void daObjHami4_c::daObjHami4_open_stop() {
    /* Nonmatching */
}

/* 000007B0-00000870       .text daObjHami4_Create__FPv */
static cPhs_State daObjHami4_Create(void* i_this) {
    cPhs_State status;
    daObjHami4_c* obj = static_cast<daObjHami4_c*>(i_this);
    
    fopAcM_SetupActor(obj, daObjHami4_c);
    for (int i = 0; i < 4; i++){
        obj->mdBgW[i] = NULL;
    }
    status = dComIfG_resLoad(&obj->mPhs, "Hami4");
    if (status == cPhs_COMPLEATE_e) {
        if(!fopAcM_entrySolidHeap(obj, CheckCreateHeap, 0x4900)) {
            status = cPhs_ERROR_e;
        } else {
            obj->CreateInit();
        }
    }
    return status;
    /* Nonmatching */
}

/* 00000870-00000918       .text daObjHami4_Delete__FPv */
static BOOL daObjHami4_Delete(void* i_this) {
    daObjHami4_c* obj = static_cast<daObjHami4_c*>(i_this);
    
    for (int i = 0; i < 4; i++){
        if (obj->mdBgW[i] != NULL && obj->mdBgW[i]->ChkUsed()) {
            dComIfG_Bgsp()->Release(obj->mdBgW[i]);
        }
    }
    dComIfG_resDelete(&obj->mPhs,"Hami4");
    return 1;
    /* Nonmatching */
}

/* 00000918-000009DC       .text daObjHami4_Draw__FPv */
static BOOL daObjHami4_Draw(void* i_this) {
    daObjHami4_c* obj = static_cast<daObjHami4_c*>(i_this);
    
    g_env_light.settingTevStruct(TEV_TYPE_BG0, &obj->current.pos, &obj->tevStr);
    dComIfGd_setListBG();
    for (int i = 0; i < 4; i++){
        g_env_light.setLightTevColorType(obj->mpModels[i],&obj->tevStr);
        mDoExt_modelUpdateDL(obj->mpModels[i]);
    }
    dComIfGd_setListInvisisble();
    return TRUE;
    /* Nonmatching */
}

/* 000009DC-00000A58       .text daObjHami4_Execute__FPv */
static BOOL daObjHami4_Execute(void* i_this) {
    daObjHami4_c* obj = static_cast<daObjHami4_c*>(i_this);
    switch (obj->field_0x378) {
        case 0: 
            obj->daObjHami4_close_stop();
            break;
        case 1: 
            obj->daObjHami4_open_demo_wait();
            break;
        case 2: 
            obj->daObjHami4_open_demo();
            break;
        case 3:
            obj->daObjHami4_open_stop();
    }
    obj->set_mtx();
    return 1;
    /* Nonmatching */
}

/* 00000A58-00000A60       .text daObjHami4_IsDelete__FPv */
static BOOL daObjHami4_IsDelete(void*) {
    return TRUE;
}

static actor_method_class daObj_Hami4MethodTable = {
    (process_method_func)daObjHami4_Create,
    (process_method_func)daObjHami4_Delete,
    (process_method_func)daObjHami4_Execute,
    (process_method_func)daObjHami4_IsDelete,
    (process_method_func)daObjHami4_Draw,
};

actor_process_profile_definition g_profile_Obj_Hami4 = {
    /* LayerID      */ fpcLy_CURRENT_e,
    /* ListID       */ 0x0003,
    /* ListPrio     */ fpcPi_CURRENT_e,
    /* ProcName     */ PROC_Obj_Hami4,
    /* Proc SubMtd  */ &g_fpcLf_Method.base,
    /* Size         */ sizeof(daObjHami4_c),
    /* SizeOther    */ 0,
    /* Parameters   */ 0,
    /* Leaf SubMtd  */ &g_fopAc_Method.base,
    /* Priority     */ PRIO_Obj_Hami4,
    /* Actor SubMtd */ &daObj_Hami4MethodTable,
    /* Status       */ fopAcStts_NOCULLEXEC_e | fopAcStts_CULL_e | fopAcStts_UNK40000_e,
    /* Group        */ fopAc_ACTOR_e,
    /* CullType     */ fopAc_CULLBOX_CUSTOM_e,
};
